name: PCB Design Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  erc-drc-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board:
          - { name: "Brain", path: "brain/Brain" }
          - { name: "H-Bridge", path: "h-bridge/HBridge" }
          - { name: "Power Distribution", path: "power-distribution/Power_Board" }
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install KiCad
      run: |
        sudo add-apt-repository -y ppa:kicad/kicad-9.0-releases
        sudo apt-get update
        sudo apt-get install -y kicad kicad-symbols kicad-footprints kicad-packages3d kicad-templates
        
       
        echo "KiCad version:"
        kicad-cli version
        
        echo "Available symbol libraries:"
        ls -la /usr/share/kicad/symbols/ | head -10
        echo "Available footprint libraries:"
        ls -la /usr/share/kicad/footprints/ | head -10
    
    - name: Run ERC Check - ${{ matrix.board.name }}
      run: |
        cd $(dirname "${{ matrix.board.path }}")
        kicad-cli sch erc --exit-code-violations "$(basename "${{ matrix.board.path }}").kicad_sch"
      continue-on-error: true
      id: erc
    
    - name: Run DRC Check - ${{ matrix.board.name }}
      run: |
        cd $(dirname "${{ matrix.board.path }}")
        kicad-cli pcb drc --exit-code-violations "$(basename "${{ matrix.board.path }}").kicad_pcb"
      continue-on-error: true
      id: drc
    
    - name: Generate ERC Report - ${{ matrix.board.name }}
      if: always()
      run: |
        cd $(dirname "${{ matrix.board.path }}")
        mkdir -p reports
        kicad-cli sch erc --format json --output "reports/erc-report.json" "$(basename "${{ matrix.board.path }}").kicad_sch" || true
        kicad-cli sch erc --output "reports/erc-report.txt" "$(basename "${{ matrix.board.path }}").kicad_sch" || true
    
    - name: Generate DRC Report - ${{ matrix.board.name }}
      if: always()
      run: |
        cd $(dirname "${{ matrix.board.path }}")
        mkdir -p reports
        kicad-cli pcb drc --format json --output "reports/drc-report.json" "$(basename "${{ matrix.board.path }}").kicad_pcb" || true
        kicad-cli pcb drc --output "reports/drc-report.txt" "$(basename "${{ matrix.board.path }}").kicad_pcb" || true
    
    - name: Upload Reports - ${{ matrix.board.name }}
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.board.name }}-reports
        path: |
          ${{ contains(matrix.board.name, 'Brain') && 'brain/reports' || contains(matrix.board.name, 'H-Bridge') && 'h-bridge/reports' || 'power-distribution/reports' }}
    
    - name: Comment PR with Results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const board = '${{ matrix.board.name }}';
          const ercStatus = '${{ steps.erc.outcome }}' === 'success' ? '✅' : '❌';
          const drcStatus = '${{ steps.drc.outcome }}' === 'success' ? '✅' : '❌';
          
          const comment = `### PCB Check Results - ${board}
          
          | Check | Status |
          |-------|--------|
          | ERC   | ${ercStatus} |
          | DRC   | ${drcStatus} |
          
          Check the artifacts for detailed reports.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Check Results
      if: steps.erc.outcome == 'failure' || steps.drc.outcome == 'failure'
      run: |
        echo "❌ ERC or DRC checks failed for ${{ matrix.board.name }}"
        echo "ERC Status: ${{ steps.erc.outcome }}"
        echo "DRC Status: ${{ steps.drc.outcome }}"
        exit 1